<!DOCTYPE html>
<html>
    <head>
        <title>My map</title>   
        <link rel="stylesheet" href="leaflet.css" />
        <script src="leaflet.js"></script>
        <script type="text/javascript" src="data.js"></script>
        <style>
            /* Change the values below to adjust the appearance of the legend */
            .legend {
                padding: 6px 8px;
                line-height: 18px;
                background: rgba(255,255,255,0.9);
                box-shadow: 0 0 15px rgba(0,0,0,0.2);
                border-radius: 5px;
            }      

             /* Change the values below to adjust the appearance of the legend color boxes */
             .legend i {
                width: 18px;
                height: 18px;
                float: left;
                margin-right: 8px;      
                opacity: 0.7;
            }
        </style>
        
    </head>

    <body>
        <div id="map" style="height: 500px"></div>
     
        <script type="text/javascript">  
            var map = L.map('map').setView([37.8, -96], 4);
            
            L.tileLayer('http://{s}.tile.stamen.com/toner/{z}/{x}/{y}.jpg', {
               attribution: 'Map tiles by <a href="http://stamen.com">Stamen Design</a>, under <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a>. Data by <a href="http://openstreetmap.org">OpenStreetMap</a>, under <a href="http://www.openstreetmap.org/copyright">ODbL</a>.',
               maxZoom: 12
            }).addTo(map);
            
            function getColor(value) {
                return  value > 40    ? '#238b45':
                        value > 37.5  ? '#74c476':
                        value > 35    ? '#bae4b3':
                                        '#edf8e9';
            }
            
            function style(feature){
                return {
                    fillColor: getColor(feature.properties.MED_age),
                    weight: 2,
                    opacity: 1,
                    color: 'white',
                    dashArray: '3',
                    fillOpacity: 0.9
                };
            }
            
            function highlightFeature(e) {
                 var layer = e.target;

                 // You can adjust the attribute values below to change the styles of features on mouseover
                 layer.setStyle({
                    weight: 5,
                    color: '#666',
                    dashArray: '',
                    fillOpacity: 0.7
                 });

                 if (!L.Browser.ie && !L.Browser.opera) {
                    layer.bringToFront();
                 }
                
                // Define the two variables to hold the values of the state names and their median age values. 
                // Change these according to your data. You are free to use any names for the variables, but be sure to use the original field name in the attribute table (case-sensitive!!!).
                var name = layer.feature.properties.NAME10;
                var age = layer.feature.properties.MED_age;

                L.popup()
                    .setLatLng(e.latlng)

                     // Define what you want to display in the popups.
                     // You will need to work with strings here. Review the html tags <br> and <b> if needed.
                    .setContent('Median Age' + '<br><b>' + name + '</b><br>' + age) 
                    .openOn(map)
            }
            
            var geojson
                        
            function resetHighlight(e) {
                geojson.resetStyle(e.target);
            }
            
            function zoomToFeature(e) {
                map.fitBounds(e.target.getBounds());
            }
            
            function onEachFeature(feature, layer) {
                layer.on({
                    mouseover: highlightFeature,
                    mouseout: resetHighlight,
                    click: zoomToFeature
                });
            }

            geojson = L.geoJson(data, {
                style: style,
                onEachFeature: onEachFeature
            }).addTo(map);
            
            
            var legend = L.control({position: 'bottomright'}); // Try the other three corners if you like.

            legend.onAdd = function (map) {

                var div = L.DomUtil.create('div', 'legend'),
                    grades = [0, 35, 37.5, 40]; // The break values to define the intervals of median age

                div.innerHTML = '<b>Median Age <br> 2010 <br></b>'; // The legend title, in this case it's Median Age 2010

                // Loop through our median age intervals and generate a label with a colored square for each interval.
                // If you are creating a similar choropleth map, you do not need to change lines below. 
                for (var i = 0; i < grades.length; i++) {
                    div.innerHTML +=
                    '<i style="background:' + getColor(grades[i] + 1) + '"></i>' +
                    grades[i] + (grades[i + 1] ? '&ndash;' + grades[i + 1] + '<br>' : '+');
                }

                return div;
            };

            legend.addTo(map);
            
        </script>
   </body>    
</html>